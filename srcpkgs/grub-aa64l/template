# Template file for 'grub-aa64l'
_pkgname=grub
pkgname=grub-aa64l
version=2.02+1
revision=1
hostmakedepends="python3 pkg-config flex freetype-devel font-unifont-bdf gettext-devel automake autoconf pkgconf"
makedepends="libusb-compat-devel ncurses-devel freetype-devel
 liblzma-devel device-mapper-devel fuse-devel"
depends="os-prober"
conflicts="grub"
conf_files="/etc/default/grub /etc/grub.d/*"
short_desc="GRand Unified Bootloader 2 (aarch64-laptops)"
maintainer="klardotsh <josh@klar.sh>"
license="GPL-3"
homepage="https://www.gnu.org/software/grub/"
_gitcommit="5b387fea63fac82352831b722bd7d337fac04278" # upstream aarch64-laptops
# _gitcommit="981b42b6d6f9edf380c8cacd04f294de9f71db6c" # klardotsh
distfiles="https://github.com/aarch64-laptops/grub/archive/${_gitcommit}.tar.gz"
checksum=9aee859cdb43027a68a6faa6afb0d081257b5a85225277e67877d2b354b46423 # upstream aarch64-laptops
# checksum=71021b777e7d2c9c17b094b39be20b06f100d6272c3c29d93565471811d56cbb
wrksrc="${_pkgname}-${_gitcommit}"

archs="aarch64*"
nopie=yes

_NATIVE_PLATFORM=efi
subpackages="grub-aa64l-utils grub-aa64l-efi"

post_extract() {
	sed -i -e 's,freetype/ftsynth.h,freetype2/ftsynth.h,' util/grub-mkfont.c
}

do_configure() {
	unset CC AS LD RANLIB CPP
	CFLAGS="$CFLAGS -fno-stack-protector"

	configure_args+=" --enable-device-mapper --enable-cache-stats --enable-nls
		--enable-grub-mkfont --enable-grub-mount --disable-werror
		--sbindir=/usr/bin"

	# fix unifont.bdf location so grub-mkfont can create *.pf2 files
	sed -i 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|' configure.ac

	# build tools
	_configure_args=${configure_args}
	if [ -n "${_NATIVE_PLATFORM}" ]; then
		_configure_args="--with-platform=${_NATIVE_PLATFORM} ${_configure_args}"
	fi
	msg_normal "Configuring grub tools...\n"

	./autogen.sh

	mkdir -p $wrksrc/build
	cd $wrksrc/build
	../configure --host=${XBPS_TARGET_MACHINE} ${_configure_args}

	for _SUPP_BUILD in ${_SUPPLEMENTARY_BUILDS}; do
		_TARGET=${_SUPP_BUILD%%-*}
		_PLATFORM=${_SUPP_BUILD##*-}
		msg_normal "Configuring ${_TARGET} ${_PLATFORM} grub...\n"
		mkdir $wrksrc/${_PLATFORM}_${_TARGET}_build
		cd $wrksrc/${_PLATFORM}_${_TARGET}_build
		../configure --host=${XBPS_TARGET_MACHINE} --target=${_TARGET} --with-platform=${_PLATFORM} ${configure_args} \
			--disable-efiemu \
			--libdir=/usr/lib
	done
}

do_build() {
	# XXX remove the strip wrapper
	rm ${XBPS_WRAPPERDIR}/strip

	msg_normal "Building grub tools...\n"
	cd $wrksrc/build
	make ${makejobs} &> make.log || tail -n100 make.log

	for _SUPP_BUILD in ${_SUPPLEMENTARY_BUILDS}; do
		_TARGET=${_SUPP_BUILD%%-*}
		_PLATFORM=${_SUPP_BUILD##*-}
		msg_normal "Building ${_TARGET} ${_PLATFORM} grub...\n"
		cd $wrksrc/${_PLATFORM}_${_TARGET}_build
		make ${makejobs} &> make.log || tail -n100 make.log
	done
}

do_install() {
	# XXX remove the strip wrapper
	rm ${XBPS_WRAPPERDIR}/strip

	for _SUPP_BUILD in ${_SUPPLEMENTARY_BUILDS}; do
		_TARGET=${_SUPP_BUILD%%-*}
		_GRUB_TARGET=${_TARGET}
		case "${_GRUB_TARGET}" in
		aarch64*)
			_GRUB_TARGET=arm64
			;;
		esac
		_PLATFORM=${_SUPP_BUILD##*-}
		cd $wrksrc/${_PLATFORM}_${_TARGET}_build
		make DESTDIR=$DESTDIR/${_PLATFORM}_${_TARGET} install
		# Remove non-platform specific files
		rm -rf ${DESTDIR}/${_PLATFORM}_${_TARGET}/{boot,etc,usr/{share,bin}}
		rm -f ${DESTDIR}/${_PLATFORM}_${_TARGET}/usr/lib/grub/${_GRUB_TARGET}-${_PLATFORM}/${_GRUB_TARGET}-*
		rm -f ${DESTDIR}/${_PLATFORM}_${_TARGET}/usr/lib/grub/${_GRUB_TARGET}-${_PLATFORM}/*.{module,image}
		cp -r ${DESTDIR}/${_PLATFORM}_${_TARGET}/* ${DESTDIR}
		rm -rf ${DESTDIR}/${_PLATFORM}_${_TARGET}
	done

	cd $wrksrc/build
	make DESTDIR=$DESTDIR install

	# Required to compress info files.
	vmkdir usr/share/info
	touch -f ${DESTDIR}/usr/share/info/dir

	vinstall ${FILESDIR}/grub.default 644 etc/default grub
	# Kernel hooks.
	vinstall ${FILESDIR}/kernel.d/grub.post 750 \
		etc/kernel.d/post-install 50-grub
	vinstall ${FILESDIR}/kernel.d/grub.post 750 \
		etc/kernel.d/post-remove 50-grub

	# update-grub for noobs.
	printf "#!/bin/sh\ngrub-mkconfig -o /boot/grub/grub.cfg\nexit \$?\n" >> \
		${DESTDIR}/usr/bin/update-grub
	chmod 755 ${DESTDIR}/usr/bin/update-grub

	vmkdir usr/share/bash-completion/completions
	mv ${DESTDIR}/etc/bash_completion.d/grub \
		${DESTDIR}/usr/share/bash-completion/completions

	# Remove useless tools
	rm ${DESTDIR}/usr/bin/grub-ofpathname
	rm ${DESTDIR}/usr/bin/grub-sparc64-setup
}

grub-aa64l-utils_package() {
	short_desc+=" - additional utilities"
	depends="grub-aa64l>=${version}"
	pkg_install() {
		vmove usr/bin/grub-menulst2cfg
		vmove usr/bin/grub-fstest
		vmove usr/bin/grub-mkfont
	}
}

grub-aa64l-efi_package() {
	archs=noarch
	depends="grub-aa64l>=$version dosfstools efibootmgr"
	short_desc+=" - EFI support"
	pkg_install() {
		vmove usr/lib/grub/arm64-efi
	}
}
